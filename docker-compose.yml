version: '3.8'

services:
  sia-server:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"  # gRPC端口
      - "9090:9090"  # HTTP端口
    environment:
      - APP_NAME=sia-image-service
      - APP_VERSION=1.0.0
      - APP_ENVIRONMENT=production
      - GRPC_PORT=8080
      - HTTP_PORT=9090
      - LOG_LEVEL=info
      - LOG_FORMAT=json
      # 图片生成配置 - 需要设置实际的API密钥
      - IMAGE_API_KEY=${IMAGE_API_KEY}
      - IMAGE_BASE_URL=https://ark.cn-beijing.volces.com
      - IMAGE_MODEL=doubao-seedream-4-0-250828
      - IMAGE_DEFAULT_SIZE=2K
      - IMAGE_TIMEOUT=300
      - IMAGE_MAX_RETRIES=3
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 可选：添加监控服务
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  # 可选：添加Grafana仪表板
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    restart: unless-stopped

volumes:
  grafana-storage: